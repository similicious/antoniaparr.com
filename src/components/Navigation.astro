---
import { getCollection } from "astro:content";
import SidebarToggle from "./SidebarToggle.astro";
import { createSlug } from "@app/util/create-slug";

interface Link {
  label: string;
  href: string;
}

const pages = await getCollection("pages");

const numberOfPages = Math.max(...pages.map((page) => page.data.position));
const links = [...Array(numberOfPages).keys()]
  .map((_, index) => {
    const page = pages.find((p) => p.data.position === index + 1);

    if (!page) {
      return;
    }

    if (index === 0) {
      return { label: page.data.title, href: "/" };
    }

    return {
      label: page.data.title,
      href: `/${createSlug(page.data.title)}`,
    };
  })
  .filter(Boolean) as Link[];
---

<div class="overlay">
  <aside>
    <SidebarToggle position="aside" />
    <nav>
      <ul>
        {
          links.map((link) => (
            <li>
              <a href={link.href}>{link.label}</a>
            </li>
          ))
        }
      </ul>
    </nav>
  </aside>
</div>

<style>
  .overlay {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    transform: translateX(-100%);

    z-index: 1;
    transition: transform 0.3s ease-in-out;
  }

  .overlay.show {
    transform: translateX(0);
  }

  aside {
    padding: 2rem;
    height: 100%;
    width: 50%;
    background-color: var(--color-salmon);
  }

  ul {
    margin: 0;
    padding: 0;
  }

  li {
    list-style: none;
    margin: 0;
    font-family: AvenirNextCondensed, sans-serif;
    font-weight: 500;
    margin-bottom: 1rem;
  }

  li a {
    color: var(--color-red);
    text-decoration: none;
    text-transform: uppercase;
    font-size: 1.5rem;
  }
</style>
