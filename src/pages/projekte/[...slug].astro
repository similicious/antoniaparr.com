---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

import Cloud from "@app/components/Cloud.astro";
import Layout from "@app/layouts/Layout.astro";
import Infobox from "@app/components/Infobox.astro";
import { createSlug } from "@app/util/create-slug";
import Carousel from "@app/components/Carousel.astro";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((entry) => ({
    params: {
      slug: `${entry.data.date.getFullYear()}-${createSlug(entry.data.title)}`,
    },
    props: { entry },
  }));
}
const imageWidth = "width: 100%; height: auto;";
const { entry } = Astro.props;
---

<Layout title={entry.data.title} showTagline={false}>
  <Cloud slot="header">
    <a href="/projekte">Projekte</a>
  </Cloud>

  <!-- Icon -->
  <section class="container icon-container">
    <div class="row justify-content-center">
      <div class="col-5 col-md-4 col-lg-2">
        <Image
          loading="eager"
          src={entry.data.icon}
          alt={`Illustration von ${entry.data.title}`}
          style={imageWidth}
        />
      </div>
    </div>
  </section>

  <!-- Gallery -->
  {
    entry.data.gallery && (
      <div class="gallery-container">
        <div class="container-md">
          <div class="row g-0 justify-content-center">
            <div class="col-12 col-lg-8 col-xl-6">
              <Carousel
                images={entry.data.gallery.map(
                  (item) => item.imageAndDescription
                )}
                alt={entry.data.title}
              />
            </div>
          </div>
        </div>
      </div>
    )
  }

  <!-- Info -->
  <div class="container my-4">
    <div class="row justify-content-center">
      <div class="col-10 col-lg-8 col-xl-6">
        <Infobox>
          <div class="p-3">
            <h3>{entry.data.title}</h3>
            <p>{entry.data.date.getFullYear()}</p>
            {
              entry.data.description && (
                <p class="m-0">{entry.data.description}</p>
              )
            }
            {
              entry.data.links && (
                <p>
                  <ul class="list-unstyled m-0">
                    {entry.data.links.map(({ linkAndTitle }) => (
                      <li>
                        <a href={linkAndTitle.link} target="_blank">
                          {linkAndTitle.linkTitle}
                        </a>
                      </li>
                    ))}
                  </ul>
                </p>
              )
            }
          </div>
        </Infobox>
      </div>
    </div>
  </div>
</Layout>

<style>
  .icon-container {
    margin-top: -2rem;
    margin-bottom: -1rem;
  }

  button {
    background: transparent;
    border: none;
    padding: 0;
  }

  .gallery-container {
    background-color: var(--color-blue);
    padding: 2rem 0;
  }
</style>
